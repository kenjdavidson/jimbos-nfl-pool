name: Test PR Build
on:
  pull_request:
    branches:
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start server
        run: |
          npx http-server _site -p 8080 &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          # Wait for server to start
          sleep 5

      - name: Test pages load correctly
        run: |
          # The build uses --pathprefix=jimbos-nfl-pool, so pages are under that path
          BASE_URL="http://localhost:8080/jimbos-nfl-pool"
          
          # Test homepage
          echo "Testing homepage..."
          if curl -f -s "$BASE_URL/" > /dev/null; then
            echo "✓ Homepage loaded successfully"
          else
            echo "✗ ERROR: Homepage failed to load"
            exit 1
          fi
          
          # Test spread pool pages (checking available weeks)
          echo ""
          echo "Testing spread pool week pages..."
          WEEKS_FOUND=0
          for week in 1 2 3 4 5 6 7 8 9 10; do
            if curl -f -s "$BASE_URL/week/$week/" > /dev/null 2>&1; then
              echo "✓ Week $week page loaded successfully"
              WEEKS_FOUND=$((WEEKS_FOUND + 1))
            fi
          done
          
          if [ $WEEKS_FOUND -eq 0 ]; then
            echo "✗ ERROR: No week pages found!"
            exit 1
          fi
          echo "Found $WEEKS_FOUND week pages"
          
          # Test player pages (sample a few common names from the data)
          echo ""
          echo "Testing player pages..."
          PLAYERS_FOUND=0
          for player in "ken" "cosmo" "aaron" "ryan"; do
            if curl -f -s "$BASE_URL/players/$player/" > /dev/null 2>&1; then
              echo "✓ Player page for '$player' loaded successfully"
              PLAYERS_FOUND=$((PLAYERS_FOUND + 1))
            fi
          done
          
          if [ $PLAYERS_FOUND -eq 0 ]; then
            echo "⚠ WARNING: No player pages found (this may be expected if player data structure changed)"
          else
            echo "Found $PLAYERS_FOUND player pages"
          fi
          
          echo ""
          echo "✓ All required tests passed!"

      - name: Cleanup
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            kill $SERVER_PID || true
          fi
