---
layout: layout.njk
title: Jimbo's NFL Pools
permalink: "/"
---

{% set spreadPool = collections.spread_pool | sort(true, false, 'year') | sort(true, false, 'week') %}
{% set latestWeek = spreadPool | first %}
{% set years = [] %}
{% for pool in spreadPool %}
  {% if pool.year not in years %}
    {% set years = (years.push(pool.year), years) %}
  {% endif %}
{% endfor %}

<div class="flex flex-row gap-4 mb-4">
  <div>
    <label for="year-select" class="block text-sm font-medium mb-1">Year:</label>
    <select id="year-select" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-slate-700">
      {% for year in years | reverse %}
      <option value="{{ year }}" {% if year == latestWeek.year %}selected{% endif %}>{{ year }}</option>
      {% endfor %}
    </select>
  </div>
  <div>
    <label for="week-select" class="block text-sm font-medium mb-1">Week:</label>
    <select id="week-select" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-slate-700">
    </select>
  </div>
</div>

<script>
  // Populate weeks based on selected year
  const spreadPoolData = {{ spreadPool | toJson | safe }};
  const yearSelect = document.getElementById('year-select');
  const weekSelect = document.getElementById('week-select');
  
  function updateWeeks() {
    const selectedYear = parseInt(yearSelect.value);
    const weeks = spreadPoolData.filter(pool => pool.year === selectedYear);
    
    weekSelect.innerHTML = '';
    weeks.sort((a, b) => b.week - a.week).forEach(pool => {
      const option = document.createElement('option');
      option.value = pool.week;
      option.textContent = `Week ${pool.week}`;
      if (pool.year === {{ latestWeek.year }} && pool.week === {{ latestWeek.week }}) {
        option.selected = true;
      }
      weekSelect.appendChild(option);
    });
  }
  
  yearSelect.addEventListener('change', updateWeeks);
  weekSelect.addEventListener('change', () => {
    const year = yearSelect.value;
    const week = weekSelect.value;
    window.location.href = `{{ '/week/' | url }}${year}/${week}/`;
  });
  
  // Initialize on page load
  updateWeeks();
</script>

<h1 class="text-4xl font-bold tracking-tight">Spread Pool</h1>

<div class="w-full flex flex-col lg:flex-row py-4">
    <article class="px-2 lg:basis-9/12">
        <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
            <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                <th>#</th>
                <th>Name</th>
                <th>Points</th>
                <th>Wins</th>
            </thead>
            <tbody>
            {% for standing in latestWeek.standings %}
                <tr>
                    <td>{{ standing.position }}</td>
                    <td><a href="{{ standing | playerUrl | url}}">{{ standing.name }}</a></td>
                    <td>{{ standing.points }}</td>
                    <td>{{ standing.wins }}</td>        
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </article>

    <article class="my-3 lg:basis-3/12">
        <p class="text-sm py-4 px-3 rounded bg-orange-200 dark:bg-yellow-700 dark:text-white">
        The standings may not be 100% up-to-date!  I do my best to update with the results from Jimbo 
        on Tuesday or Wednesday.  You can always check out the <a href="{{ latestWeek | weekUrl | url }}">latest</a>
        published week.
        <p>
    </article>
</div>

<h1>Suicide Pool</h1>

<section>
    TODO
</section>