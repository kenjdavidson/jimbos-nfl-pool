---
layout: layout.njk
pagination:
  data: collections.spread_pool
  size: 1
  alias: week
permalink: "week/{{ week.year }}/{{ week.week }}/"
---

{% set allWeeks = collections.spread_pool | sort(true, false, 'year') | sort(true, false, 'week') %}
{% set years = [] %}
{% for pool in allWeeks %}
  {% if pool.year not in years %}
    {% set years = (years.push(pool.year), years) %}
  {% endif %}
{% endfor %}

<div class="flex flex-row gap-4 mb-4">
  <div>
    <label for="year-select" class="block text-sm font-medium mb-1">Year:</label>
    <select id="year-select" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-slate-700">
      {% for year in years | reverse %}
      <option value="{{ year }}" {% if year == week.year %}selected{% endif %}>{{ year }}</option>
      {% endfor %}
    </select>
  </div>
  <div>
    <label for="week-select" class="block text-sm font-medium mb-1">Week:</label>
    <select id="week-select" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-slate-700">
    </select>
  </div>
</div>

<script>
  // Populate weeks based on selected year
  const spreadPoolData = {{ allWeeks | toJson | safe }};
  const currentYear = {{ week.year }};
  const currentWeek = {{ week.week }};
  const yearSelect = document.getElementById('year-select');
  const weekSelect = document.getElementById('week-select');
  
  function updateWeeks() {
    const selectedYear = parseInt(yearSelect.value);
    const weeks = spreadPoolData.filter(pool => pool.year === selectedYear);
    
    weekSelect.innerHTML = '';
    weeks.sort((a, b) => b.week - a.week).forEach(pool => {
      const option = document.createElement('option');
      option.value = pool.week;
      option.textContent = `Week ${pool.week}`;
      if (pool.year === currentYear && pool.week === currentWeek) {
        option.selected = true;
      }
      weekSelect.appendChild(option);
    });
  }
  
  yearSelect.addEventListener('change', () => {
    updateWeeks();
    const year = yearSelect.value;
    const week = weekSelect.value;
    window.location.href = `{{ '/week/' | url }}${year}/${week}/`;
  });
  
  weekSelect.addEventListener('change', () => {
    const year = yearSelect.value;
    const week = weekSelect.value;
    window.location.href = `{{ '/week/' | url }}${year}/${week}/`;
  });
  
  // Initialize on page load
  updateWeeks();
</script>

<h1>{{ week.name }}</h1>

<div class="w-full flex flex-col lg:flex-row py-4">

  <!-- Displays all the player picks -->
  <div class="px-2 lg:basis-9/12 week-picks overflow-auto">
    <div class="overflow-x-auto relative">
      <table class="w-full text-sm text-left">
        <thead class="text-xs uppercase bg-gray-50 dark:bg-gray-700 font-semibold">
          <tr>
            <th>Player</th>
            <th>Points</th>
            <th>TieBreak</th>
            {% for pick in week.playerPicks[0].picks %}
            <th>&nbsp;</th>
            {% endfor %}
          </tr>
        </thead>
        <tbody>
          {% for playerPick in week.playerPicks | sort(true, true, 'points') %}
          <tr>
            <td class="player-name ">
              <a class="font-semibold" 
                href="{{ playerPick | playerUrl | url }}">
                {{ playerPick.name }}
              </a>
            </td>
            <td class="font-semibold">{{ playerPick.points }}</td>
            <td class="font-semibold">{{ playerPick.tieBreak }}</td>
            {% for pick in playerPick.picks %}
            <td class="{{pick.team}}-{{week.games[loop.index-1].winningTeam}} spread{{ pick.team | classIfMatch(week.games[loop.index-1].winningTeam, 'winner') }}">{{ pick.team }}{{ pick.threePoint | threePoint }}</td>
            {% endfor %}
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Displays the week games and spreads -->
  <div class="lg:basis-3/12" overflow-auto>
    <table class="w-full text-sm text-left">
      <thead class="text-xs uppercase bg-gray-50 dark:bg-gray-700">
        <tr>
          <th>&nbsp</th>
          <th class="text-center">Games</th>
          <th>&nbsp</th>
        </tr>
      </thead>
      <tbody class="font-semibold">
        {% for game in week.games %}
        <tr class="table-auto">
          <td class="game-score">
            <span class="spread{{ game.winningTeam | classIfMatch(game.favoriteTeam, 'covered') }}">{{ game.favoriteScore }}</span>
          </td>
          <td class="text-center ">
            <span class="favorite-team">{{ game.favoriteTeam }}</span>
            <span class="spread">{{ game.spread }}</span>
            <span class="underdog-team">{{ game.underdogTeam }}</span>
          </td>
          <td class="game-score">
            <span class="spread{{ game.winningTeam | classIfMatch(game.underdogTeam, 'covered') }}">{{ game.underdogScore }}</span>
          </td>
        </tr>
        {% endfor %}
        <tr>
          <td/>
          <td class="text-center">
            {% set lastGame = week.games | last%}
            {% if lastGame.favoriteScore %}
            <span class="">Tie Break: {{ lastGame.favoriteScore + lastGame.underdogScore }}</span>
            {% endif %}
          </td>
          <td/>
        </tr>
      </tbody>
    </table>
  </div>
</div>